#include <iostream>
#include <vector>
#include <deque>
#include <algorithm>
#include <ctime>
using namespace std;
//有 5 名选手：选手 ABCDE，10 个评委分别对每一名选手打分，去除最高分，去除评委中的最低分，取平均分
//选手类
class Person
{
public:
    Person(string name,int score)
    {
        this->m_Name=name;
        this->m_Score=score;
    }
    int m_Score;//平均分
    string m_Name;//姓名
};

void createPerson(vector<Person>&v)
{
    string nameSeed="ABCDE";
    for(int i=0;i<5;i++)
    {
        string name="player";
        name+=nameSeed[i];
        int score=0;
        Person p(name,score);
        //将创建的 Person 对象，放入到容器中
        v.push_back(p);
    }
}
//打分
void setScore(vector<Person>&v)
{
    for(vector<Person>::iterator it=v.begin();it!=v.end();it++)
    {
        //将评委的分数放入到 deque 容器中
        deque<int>d;
        for(int i=0;i<10;i++)
        {
            int score=rand()%41+60;  //60 ~ 100
            d.push_back(score);
        }
//        cout<<"player:"<<it->m_Name<<"   "<<"score:"<<endl;
//        for(deque<int>::iterator dit=d.begin();dit!=d.end();dit++)
//        {
//            cout<<*dit<<" ";
//        }
//        cout<<endl;

        //排序
        sort(d.begin(),d.end());
        //去除最高分和最低分
        d.pop_back();
        d.pop_front();

        //取平均分
        int sum=0;
        for(deque<int>::iterator dit=d.begin();dit!=d.end();dit++)
        {
            sum+=*dit;//累加每个评委的分数
        }
        int avg=sum/d.size();
        //将平均分赋值给选手身上
        it->m_Score=avg;
    }
}

void showScore(vector<Person>&v)
{
    for(vector<Person>::iterator it=v.begin();it!=v.end();it++)
    {
        cout<<"player: "<<it->m_Name<<"   "<<"score: "<<it->m_Score<<endl;
    }
}

int main() {
    //随机数种子
    srand((unsigned int)time(NULL));

    //1、创建 5 名选手
    vector<Person>v;//存放选手的容器
    createPerson(v);
    //测试
//    for(vector<Person>::iterator it=v.begin();it!=v.end();it++)
//    {
//        cout<<"name= "<<(*it).m_Name<<"   "<<"score="<<(*it).m_Score<<endl;
//    }

    //2、给 5 名选手打分
    setScore(v);

    //3、显示最后得分
    showScore(v);

    return 0;
}
