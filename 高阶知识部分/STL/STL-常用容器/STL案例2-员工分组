#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <ctime>
using namespace std;

/*
 * 公司今天招聘了10名员工（ABCDEFGHIJ），10名员工进入公司后，需要指派员工在哪个部门工作
 * 员工信息有姓名，工资组成；部门分为策划、美术、研发
 * 随机给10名员工分配部门和工资
 * 通过multimap 进行信息的插入 key（部门编号）value（员工）
 * 分部门显示员工信息
 */

#define CEHUA 0
#define MEISHU 1
#define YANFA 2
class Worker
{
public:

    string m_name;
    int m_salary;
};
//创建员工
void createWorker(vector<Worker>&v)
{
    string nameSeed="ABCDEFGHIJ";
    for(int i=0;i<10;i++)
    {
        Worker worker;
        worker.m_name="employee";
        worker.m_name+=nameSeed[i];

        worker.m_salary=rand()%10000+10000;
        //将员工放入到容器中
        v.push_back(worker);
    }
}
//员工分组
void setGroup(vector<Worker>&v,multimap<int,Worker>&m)
{
    for(vector<Worker>::iterator it=v.begin();it!=v.end();it++)
    {
        //产生随机部门编号
        int deptId=rand()%3;//0 1 2

        //将员工插入到分组中
        //key 部门编号；value 具体员工
        m.insert(make_pair(deptId,*it));
    }
}
//分组显示员工
void  showWorkerByGroup(multimap<int,Worker>&m)
{
    //0 A B C \1 D E \2 F G……
    cout<<"Planning department: "<<endl;
    multimap<int,Worker>::iterator pos=m.find(CEHUA);
    int count=m.count(CEHUA);//统计策划部门的具体人数
    int index=0;
    for(;pos!=m.end()&&index<count;pos++,index++)
    {
        cout<<"name: "<<pos->second.m_name<<"  "<<"salary: "<<pos->second.m_salary<<endl;
    }
    cout<<"--------------------------"<<endl;
    cout<<"Fine Arts Department: "<<endl;
    pos=m.find(MEISHU);
    count=m.count(MEISHU);//统计策划部门的具体人数
    index=0;
    for(;pos!=m.end()&&index<count;pos++,index++)
    {
        cout<<"name: "<<pos->second.m_name<<"  "<<"salary: "<<pos->second.m_salary<<endl;
    }
    cout<<"--------------------------"<<endl;
    cout<<"R&D department: "<<endl;
    pos=m.find(YANFA);
    count=m.count(YANFA);//统计策划部门的具体人数
    index=0;
    for(;pos!=m.end()&&index<count;pos++,index++)
    {
        cout<<"name: "<<pos->second.m_name<<"  "<<"salary: "<<pos->second.m_salary<<endl;
    }
}
int main() {
    srand((unsigned int)time(NULL));
    //创建员工
    vector<Worker>vWorker;
    createWorker(vWorker);

    //2、员工分组
    multimap<int,Worker>mWorker;
    setGroup(vWorker,mWorker);

    //3、分组显示员工
    showWorkerByGroup(mWorker);

    //测试
//    for(vector<Worker>::iterator it=vWorker.begin();it!=vWorker.end();it++)
//    {
//        cout<<"name: "<<it->m_name<<"  "<<"salary: "<<it->m_salary<<endl;
//    }

    return 0;
}
