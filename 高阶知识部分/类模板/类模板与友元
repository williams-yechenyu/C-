#include<iostream>
#include<stdio.h>
using namespace std;

//通过全局函数，打印Person信息
//提前让编译器知道Person类的存在
template<class T1,class T2>
class Person;
//类外实现
template<class T1, class T2>
void printPerson2(Person<T1, T2> p)
{
	cout << "类外实现--姓名为：" << p.m_name << "类外实现--年龄为：" << p.m_age << endl;
}

template<class T1,class T2>
class Person
{
	//全局函数，类内实现
	friend void printPerson(Person<T1,T2> p)
	{
		cout << "姓名为：" << p.m_name << "年龄为：" << p.m_age << endl;
	}

	//全局函数，类外实现
	//加一个空模板的参数列表
	//如果我们的全局函数是类外实现的话，需要让编译器提前知道这个函数的存在
	friend void printPerson2<>(Person<T1, T2> p);

public:
	Person(T1 name, T2 age)
	{
		this->m_name = name;
		this->m_age = age;
	}
private:
	T1 m_name;
	T2 m_age;
};

//1、全局函数在类内实现
void test01()
{
	Person<string, int>P("Tom",20);
	printPerson(P);
}

//2、全局函数在类外实现
void test02()
{
	Person<string, int>P("Jerry", 21);
	printPerson2(P);
}
int main()
{
	//test01();
	test02();
}
